#!/bin/bash

#######################################################################################
# This script is designed to automatically detect and display to one external monitor #
# it may be updated later to support multiple monitors if I have a use for it         #
#######################################################################################
export DISPLAY=:0
export XAUTHORITY=/home/benny/.Xauthority

laptopscreen=eDP1
direction=left-of
lidstate=$(cat /proc/acpi/button/lid/LID0/state | awk '{print $2}')

externalscreen=$(xrandr | grep -w connected | awk '{print $1 }' | sed -e "s/$laptopscreen//g" | xargs -n 1)

if [ -z $externalscreen ]
then
    echo "Using internal monitor"
    oldscreen=$(bspc query -M | awk '{print $1 }' | sed -e "s/$laptopscreen//g" | xargs -n 1)
    echo "OldScreen = $oldscreen"
    if [ -z $oldscreen ]
    then
        echo "There is no monitor to disable"
    else
        xrandr --output $laptopscreen --auto
        xrandr --output $oldscreen --off
    fi
    bspc monitor $laptopscreen -d 1 2 3 4 5 6
else

    if [ $lidstate == "open" ]
    then
        echo "Using both internal and external monitors"
        xrandr --output $laptopscreen --auto --output $externalscreen --auto --$direction $laptopscreen
        bspc monitor $externalscreen -d 1 2 3
        bspc monitor $laptopscreen -d 4 5 6
    else
        echo "Using external monitor"
        #bspc wm --add-monitor $externalscreen 1920x1080+0+0
        #bspc wm --remove-monitor $laptopscreen
        xrandr --output $externalscreen --auto
        xrandr --output $laptopscreen --off
        bspc monitor $externalscreen -d 1 2 3 4 5 6
    fi
fi
